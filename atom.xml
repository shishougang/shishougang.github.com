<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[(learn&think)]]></title>
  <link href="http://shishougang.github.com/atom.xml" rel="self"/>
  <link href="http://shishougang.github.com/"/>
  <updated>2014-03-09T22:13:40+08:00</updated>
  <id>http://shishougang.github.com/</id>
  <author>
    <name><![CDATA[DreamRunner]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress中使用Latex写数学公式]]></title>
    <link href="http://shishougang.github.com/blog/2014/03/09/octopresszhong-shi-yong-latexxie-shu-xue-gong-shi/"/>
    <updated>2014-03-09T19:41:06+08:00</updated>
    <id>http://shishougang.github.com/blog/2014/03/09/octopresszhong-shi-yong-latexxie-shu-xue-gong-shi</id>
    <content type="html"><![CDATA[<p>Octopress默认不支持LaTex写数学公式，这里修改Octopress使其支持。</p>

<h2 id="section">测试</h2>

<h3 id="latex">整段LaTex公式</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="latex"><span class="line"><span class="sb">$$</span><span class="nb"></span>
</span><span class="line"><span class="nv">\begin</span><span class="nb">{align}</span>
</span><span class="line"><span class="nv">\mbox</span><span class="nb">{Union: } &amp; A</span><span class="nv">\cup</span><span class="nb"> B </span><span class="o">=</span><span class="nb"> </span><span class="nv">\{</span><span class="nb">x</span><span class="nv">\mid</span><span class="nb"> x</span><span class="nv">\in</span><span class="nb"> A </span><span class="nv">\mbox</span><span class="nb">{ or } x</span><span class="nv">\in</span><span class="nb"> B</span><span class="nv">\}</span><span class="nb"> </span><span class="nv">\\</span><span class="nb"></span>
</span><span class="line"><span class="nv">\mbox</span><span class="nb">{Concatenation: } &amp; A</span><span class="nv">\circ</span><span class="nb"> B  </span><span class="o">=</span><span class="nb"> </span><span class="nv">\{</span><span class="nb">xy</span><span class="nv">\mid</span><span class="nb"> x</span><span class="nv">\in</span><span class="nb"> A </span><span class="nv">\mbox</span><span class="nb">{ and } y</span><span class="nv">\in</span><span class="nb"> B</span><span class="nv">\}</span><span class="nb"> </span><span class="nv">\\</span><span class="nb"></span>
</span><span class="line"><span class="nv">\mbox</span><span class="nb">{Star: } &amp; A^</span><span class="nv">\star</span><span class="nb">  </span><span class="o">=</span><span class="nb"> </span><span class="nv">\{</span><span class="nb">x_</span><span class="m">1</span><span class="nb">x_</span><span class="m">2</span><span class="nv">\ldots</span><span class="nb"> x_k </span><span class="nv">\mid</span><span class="nb">  k</span><span class="nv">\geq</span><span class="nb"> </span><span class="m">0</span><span class="nb"> </span><span class="nv">\mbox</span><span class="nb">{ and each } x_i</span><span class="nv">\in</span><span class="nb"> A</span><span class="nv">\}</span><span class="nb"> </span><span class="nv">\\</span><span class="nb"></span>
</span><span class="line"><span class="nv">\end</span><span class="nb">{align}</span>
</span><span class="line"><span class="s">$$</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<script type="math/tex; mode=display">% &lt;![CDATA[

\begin{align}
\mbox{Union: } & A\cup B = \{x\mid x\in A \mbox{ or } x\in B\} \\
\mbox{Concatenation: } & A\circ B  = \{xy\mid x\in A \mbox{ and } y\in B\} \\
\mbox{Star: } & A^\star  = \{x_1x_2\ldots x_k \mid  k\geq 0 \mbox{ and each } x_i\in A\} \\
\end{align}
 %]]&gt;</script>

<h3 id="latex-1">内嵌LaTex公式</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="latex"><span class="line">If <span class="s">$</span><span class="nb">a^</span><span class="m">2</span><span class="o">=</span><span class="nb">b</span><span class="s">$</span> and <span class="s">$</span><span class="nb">b</span><span class="o">=</span><span class="m">2</span><span class="s">$</span>, then the solution must be
</span><span class="line">either <span class="s">$</span><span class="nb">a</span><span class="o">=+</span><span class="nv">\sqrt</span><span class="nb">{</span><span class="m">2</span><span class="nb">}</span><span class="s">$</span> or <span class="s">$</span><span class="nb">a</span><span class="o">=-</span><span class="nv">\sqrt</span><span class="nb">{</span><span class="m">2</span><span class="nb">}</span><span class="s">$</span>.
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>If $a^2=b$ and $b=2$, then the solution must be
either $a=+\sqrt{2}$ or $a=-\sqrt{2}$.</p>

<!-- more -->

<h2 id="section-1">设置</h2>

<h3 id="kramdownhttpkramdowngettalongorgrdiscount">1.用<a href="http://kramdown.gettalong.org/">kramdown</a>代替rdiscount</h3>
<ul>
  <li>安装</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">gem install kramdown
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>修改<code>_config.yml</code>
把<code>_config.yml</code>中所有<code>rdiscount</code>替换成<code>kramdown</code>。</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="diff"><span class="line"><span class="gd">--- a/_config.yml</span>
</span><span class="line"><span class="gi">+++ b/_config.yml</span>
</span><span class="line"><span class="gu">@@ -34,8 +34,8 @@ destination: public</span>
</span><span class="line"> plugins: plugins
</span><span class="line"> code_dir: downloads/code
</span><span class="line"> category_dir: blog/categories
</span><span class="line"><span class="gd">-markdown: rdiscount</span>
</span><span class="line"><span class="gd">-rdiscount:</span>
</span><span class="line"><span class="gi">+markdown: kramdown</span>
</span><span class="line"><span class="gi">+kramdown:</span>
</span><span class="line">   extensions:
</span><span class="line">     - autolink
</span><span class="line">     - footnotes
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>在<code>Gemfile</code>中把<code>gem 'ridiscount'</code>改成<code>gem 'kramdown in Gemfile</code></li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="diff"><span class="line"><span class="gh">diff --git a/Gemfile b/Gemfile</span>
</span><span class="line"><span class="gh">index cd8ce57..e1d8d30 100644</span>
</span><span class="line"><span class="gd">--- a/Gemfile</span>
</span><span class="line"><span class="gi">+++ b/Gemfile</span>
</span><span class="line"><span class="gu">@@ -3,7 +3,7 @@ source &quot;https://rubygems.org&quot;</span>
</span><span class="line"> group :development do
</span><span class="line">   gem &#39;rake&#39;, &#39;~&gt; 0.9&#39;
</span><span class="line">   gem &#39;jekyll&#39;, &#39;~&gt; 0.12&#39;
</span><span class="line"><span class="gd">-  gem &#39;rdiscount&#39;, &#39;~&gt; 2.0.7&#39;</span>
</span><span class="line"><span class="gi">+  gem &#39;kramdown&#39;</span>
</span><span class="line">   gem &#39;pygments.rb&#39;, &#39;~&gt; 0.3.4&#39;
</span><span class="line">   gem &#39;RedCloth&#39;, &#39;~&gt; 4.2.9&#39;
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="mathjax">2.添加MathJax配置</h3>
<p>在<code>/source/_includes/custom/head.html</code>文件里添加<sup id="fnref:fn1"><a href="#fn:fn1" rel="footnote">1</a></sup>：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="c">&lt;!--</span> <span class="nx">mathjax</span> <span class="nx">config</span> <span class="nx">similar</span> <span class="nx">to</span> <span class="nx">math</span><span class="p">.</span><span class="nx">stackexchange</span> <span class="o">--&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/x-mathjax-config&quot;</span><span class="o">&gt;</span>
</span><span class="line"><span class="nx">MathJax</span><span class="p">.</span><span class="nx">Hub</span><span class="p">.</span><span class="nx">Config</span><span class="p">({</span>
</span><span class="line">  <span class="nx">jax</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;input/TeX&quot;</span><span class="p">,</span> <span class="s2">&quot;output/HTML-CSS&quot;</span><span class="p">],</span>
</span><span class="line">  <span class="nx">tex2jax</span><span class="o">:</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">inlineMath</span><span class="o">:</span> <span class="p">[</span> <span class="p">[</span><span class="s1">&#39;$&#39;</span><span class="p">,</span> <span class="s1">&#39;$&#39;</span><span class="p">]</span> <span class="p">],</span>
</span><span class="line">    <span class="nx">displayMath</span><span class="o">:</span> <span class="p">[</span> <span class="p">[</span><span class="s1">&#39;$$&#39;</span><span class="p">,</span> <span class="s1">&#39;$$&#39;</span><span class="p">]],</span>
</span><span class="line">    <span class="nx">processEscapes</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class="line">    <span class="nx">skipTags</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;script&#39;</span><span class="p">,</span> <span class="s1">&#39;noscript&#39;</span><span class="p">,</span> <span class="s1">&#39;style&#39;</span><span class="p">,</span> <span class="s1">&#39;textarea&#39;</span><span class="p">,</span> <span class="s1">&#39;pre&#39;</span><span class="p">,</span> <span class="s1">&#39;code&#39;</span><span class="p">]</span>
</span><span class="line">  <span class="p">},</span>
</span><span class="line">  <span class="nx">messageStyle</span><span class="o">:</span> <span class="s2">&quot;none&quot;</span><span class="p">,</span>
</span><span class="line">  <span class="s2">&quot;HTML-CSS&quot;</span><span class="o">:</span> <span class="p">{</span> <span class="nx">preferredFont</span><span class="o">:</span> <span class="s2">&quot;TeX&quot;</span><span class="p">,</span> <span class="nx">availableFonts</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;STIX&quot;</span><span class="p">,</span><span class="s2">&quot;TeX&quot;</span><span class="p">]</span> <span class="p">}</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line"><span class="o">&lt;</span><span class="err">/script&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="mathjaxbugfn2">3.修复MathJax右击页面空白bug<sup id="fnref:fn2"><a href="#fn:fn2" rel="footnote">2</a></sup></h3>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="diff"><span class="line"><span class="gh">diff --git a/sass/base/_theme.scss b/sass/base/_theme.scss</span>
</span><span class="line"><span class="gh">index c35136d..3ee3999 100644</span>
</span><span class="line"><span class="gd">--- a/sass/base/_theme.scss</span>
</span><span class="line"><span class="gi">+++ b/sass/base/_theme.scss</span>
</span><span class="line"><span class="gu">@@ -74,7 +74,7 @@ html {</span>
</span><span class="line">   background: $page-bg image-url(&#39;line-tile.png&#39;) top left;
</span><span class="line"> }
</span><span class="line"> body {
</span><span class="line"><span class="gd">-  &gt; div {</span>
</span><span class="line"><span class="gi">+  &gt; div#main {</span>
</span><span class="line">     background: $sidebar-bg $noise-bg;
</span><span class="line">     border-bottom: 1px solid $page-border-bottom;
</span><span class="line">     &gt; div {
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-2">更多信息</h2>

<ul>
  <li><a href="http://kramdown.gettalong.org/">kramdown语法</a></li>
  <li><a href="http://kramdown.gettalong.org/syntax.html#math-blocks">kramdown数学模块</a></li>
</ul>

<div class="footnotes">
  <ol>
    <li id="fn:fn1">
      <p>http://www.idryman.org/blog/2012/03/10/writing-math-equations-on-octopress/<a href="#fnref:fn1" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:fn2">
      <p>http://luikore.github.com/2011/09/good-things-learned-from-octopress/<a href="#fnref:fn2" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gflags 简明使用]]></title>
    <link href="http://shishougang.github.com/blog/2014/03/09/gflags-jian-ming-shi-yong/"/>
    <updated>2014-03-09T11:53:54+08:00</updated>
    <id>http://shishougang.github.com/blog/2014/03/09/gflags-jian-ming-shi-yong</id>
    <content type="html"><![CDATA[<h2 id="section">简介</h2>
<p>Google的gflags是一套命令行参数处理的开源库。比getopt更方便，更功能强大，从C++的库更好的支持C++（如C++的string类型）。包括<a href="https://code.google.com/p/gflags/">C++的版本</a>和<a href="https://code.google.com/p/python-gflags/">python的版本</a>。 这里只针对C++版本，python版本的使用类似。主要内容参考与翻译自官方文档：http://gflags.googlecode.com/svn/trunk/doc/gflags.html</p>

<p>你能从<a href="http://shishougang.github.com/downloads/code/2014/cmake_gflags_example.zip">这里下载</a>本文章的源代码工程。
#+begin_html
<!-- more -->
#+end_html
## example源代码
先看example源代码，然后逐步介绍。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>example.cc</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
</pre></td><td class="code"><pre><code class="c++"><span class="line"><span class="cp">#include &lt;gflags/gflags.h&gt;</span>
</span><span class="line">
</span><span class="line"><span class="n">DEFINE_bool</span><span class="p">(</span><span class="n">big_menu</span><span class="p">,</span> <span class="kc">true</span><span class="p">,</span> <span class="s">&quot;Include &#39;advanced&#39; options in the menu listing&quot;</span><span class="p">);</span>
</span><span class="line"><span class="n">DEFINE_string</span><span class="p">(</span><span class="n">languages</span><span class="p">,</span> <span class="s">&quot;english,french,german&quot;</span><span class="p">,</span> <span class="s">&quot;comma-separated list of languages to offer in the &#39;lang&#39; menu&quot;</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="kt">int</span> <span class="n">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">  <span class="n">google</span><span class="o">::</span><span class="n">ParseCommandLineFlags</span><span class="p">(</span><span class="o">&amp;</span><span class="n">argc</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">argv</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;argc=&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">argc</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span><span class="line">  <span class="k">if</span> <span class="p">(</span><span class="n">FLAGS_big_menu</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;big menu is ture&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span><span class="line">  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class="line">    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;big menu is flase&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">
</span><span class="line">  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;languages=&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">FLAGS_languages</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span><span class="line">  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-1">运行程序</h3>
<ul>
  <li>直接运行</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>run</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">  ➜  bin  ./sample
</span><span class="line">  <span class="nv">argc</span><span class="o">=</span>1
</span><span class="line">  big menu is ture
</span><span class="line">  <span class="nv">languages</span><span class="o">=</span>english,french,german
</span></code></pre></td></tr></table></div></figure></notextile></div>
<ul>
  <li>help命令</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>run</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">  ➜  bin  ./sample --help
</span><span class="line">  sample: Warning: SetUsageMessage<span class="o">()</span> never called
</span><span class="line">
</span><span class="line">  Flags from /home/shougang/workspace/drive/Google/cmake_cpp_gflags/src/sample.cc:
</span><span class="line">    -big_menu <span class="o">(</span>Include <span class="s1">&#39;advanced&#39;</span> options in the menu listing<span class="o">)</span> <span class="nb">type</span>: bool
</span><span class="line">      default: <span class="nb">true</span>
</span><span class="line">    -languages <span class="o">(</span>comma-separated list of languages to offer in the <span class="s1">&#39;lang&#39;</span> menu<span class="o">)</span>
</span><span class="line">      <span class="nb">type</span>: string default: <span class="s2">&quot;english,french,german&quot;</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line">  Flags from src/gflags.cc:
</span><span class="line">    -flagfile <span class="o">(</span>load flags from file<span class="o">)</span> <span class="nb">type</span>: string default: <span class="s2">&quot;&quot;</span>
</span><span class="line">  .........
</span><span class="line">
</span><span class="line">  ➜  bin  ./sample --helpshort
</span><span class="line">  sample: Warning: SetUsageMessage<span class="o">()</span> never called
</span><span class="line">
</span><span class="line">  Flags from /home/shougang/workspace/drive/Google/cmake_cpp_gflags/src/sample.cc:
</span><span class="line">    -big_menu <span class="o">(</span>Include <span class="s1">&#39;advanced&#39;</span> options in the menu listing<span class="o">)</span> <span class="nb">type</span>: bool
</span><span class="line">      default: <span class="nb">true</span>
</span><span class="line">    -languages <span class="o">(</span>comma-separated list of languages to offer in the <span class="s1">&#39;lang&#39;</span> menu<span class="o">)</span>
</span><span class="line">      <span class="nb">type</span>: string default: <span class="s2">&quot;english,french,german&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-2">在程序里定义参数</h2>
<p>### 包含头文件</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>header_file</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c++"><span class="line"> <span class="err">#</span><span class="n">include</span> <span class="o">&lt;</span><span class="n">gflags</span><span class="o">/</span><span class="n">gflags</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="gflag">利用gflag提供的宏定义参数</h3>
<p>该宏的3个参数分别为命令行参数名，参数默认值，参数的帮助信息。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>define_flags</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="c++"><span class="line"><span class="n">DEFINE_bool</span><span class="p">(</span><span class="n">big_menu</span><span class="p">,</span> <span class="kc">true</span><span class="p">,</span> <span class="s">&quot;Include &#39;advanced&#39; options in the menu listing&quot;</span><span class="p">);</span>
</span><span class="line"><span class="n">DEFINE_string</span><span class="p">(</span><span class="n">languages</span><span class="p">,</span> <span class="s">&quot;english,french,german&quot;</span><span class="p">,</span> <span class="s">&quot;comma-separated list of languages to offer in the &#39;lang&#39; menu&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>gflags暂时支持如下参数的类型：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>supported_types</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">DEFINE_bool: boolean
</span><span class="line">DEFINE_int32: 32-bit integer
</span><span class="line">DEFINE_int64: 64-bit integer
</span><span class="line">DEFINE_uint64: unsigned 64-bit integer
</span><span class="line">DEFINE_double: double
</span><span class="line">DEFINE_string: C++ string
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-3">访问参数</h2>

<p>通过FLAGS_name像正常变量一样访问标志参数。在这个程序中，通过
<code>FLAGS_big_menu</code>和<code>FLAGS_languages</code>访问它们。</p>

<h2 id="section-4">不同文件访问参数</h2>

<p>如果想再另外一个不是定义这个参数的文件访问这个参数的话，以参数
<code>FLAGS_big_menu</code>为例，用宏<code>DECLARE_bool(big_menu）</code>来声明引入这个参数。
这个宏相当于做了<code>extern FLAGS_big_menu</code>.</p>

<h2 id="section-5">整合一起，初始化所有参数</h2>

<p>定义号参数后，最后要告诉执行程序去处理命令行传入的参数，使得
<code>FLAGS_*</code>参数们得到正确赋值。</p>

<p>通常就是再<code>main()</code>函数中调用;</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>set_up_flag</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="c++"><span class="line"><span class="n">google</span><span class="o">::</span><span class="n">ParseCommandLineFlags</span><span class="p">(</span><span class="o">&amp;</span><span class="n">argc</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">argv</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p><code>argc</code>和<code>argv</code>就是main的入口参数，因为这个函数会改变他们的值，所以都是
以指针传入。</p>

<p>第三个参数被称为<code>remove_flags</code>。如果它是<code>true</code>,<code>ParseCommandLineFlags</code>会
从<code>argv</code>中移除标识和它们的参数，相应减少<code>argc</code>的值。然后argv只保留命令
行参数。</p>

<p>相反，<code>remove_flags</code>是<code>false</code>,<code>ParseCommandLineFlags</code>会保留<code>argc</code>不变，
但将会重新调整它们的顺序，使得标识再前面。</p>

<p>Note: <code>./sample --big_menu=false arg1</code>中再<code>big_menu</code>是标识，<code>false</code>是
它的参数，<code>arg1</code>是命令行参数。</p>

<h2 id="section-6">命令行设置参数</h2>
<p>gflags提供多种命令行设置参数。</p>

<p><code>string</code>和<code>int</code>之类，可以用如下方式：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>set_languages</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">app_containing_foo --languages<span class="o">=</span><span class="s2">&quot;chinese,japanese,korean&quot;</span>
</span><span class="line">app_containing_foo -languages<span class="o">=</span><span class="s2">&quot;chinese,japanese,korean&quot;</span>
</span><span class="line">app_containing_foo --languages <span class="s2">&quot;chinese,japanese,korean&quot;</span>
</span><span class="line">app_containing_foo -languages <span class="s2">&quot;chinese,japanese,korean&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>对于<code>boolean</code>的标识来说，用如下方式:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>set_boolean</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">app_containing_foo --big_menu
</span><span class="line">app_containing_foo --nobig_menu
</span><span class="line">app_containing_foo --big_menu<span class="o">=</span><span class="nb">true</span>
</span><span class="line">app_containing_foo --big_menu<span class="o">=</span><span class="nb">false</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>和<code>getopt()</code>一样，<code>--</code>将会终止标识的处理。所以在<code>foo -f1 1 -- -f2 2</code>中，
<code>f1</code>被认为是一个标识，但<code>f2</code>不会。</p>

<h2 id="section-7">特殊标识</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>special_flags</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">--help  显示文件中所有标识的完整帮助信息
</span><span class="line">--helpfull  和-help一样，
</span><span class="line">--helpshort  只显示当前执行文件里的标志
</span><span class="line">--helpxml  以xml凡是打印，方便处理
</span><span class="line">--version  打印版本信息，由google::SetVersionString<span class="o">()</span>设定
</span><span class="line">--flagfile  -flagfile<span class="o">=</span>f从文件f中读取命令行参数
</span><span class="line">...
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>具体见：http://gflags.googlecode.com/svn/trunk/doc/gflags.html</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[C++测试驱动开发与单元测试实例]]></title>
    <link href="http://shishougang.github.com/blog/2014/03/08/C%2B%2B%E6%B5%8B%E8%AF%95%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91%E4%B8%8E%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E5%AE%9E%E4%BE%8B/"/>
    <updated>2014-03-08T00:00:00+08:00</updated>
    <id>http://shishougang.github.com/blog/2014/03/08/C++测试驱动开发与单元测试实例</id>
    <content type="html"><![CDATA[<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 测试驱动开发基础</h2>
<div class="outline-text-2" id="text-1">
</div><div id="outline-container-sec-1-1" class="outline-3">
<h3 id="sec-1-1"><span class="section-number-3">1.1</span> 测试驱动开发</h3>
<div class="outline-text-3" id="text-1-1">
<p>
<a href="http://en.wikipedia.org/wiki/Test-driven_development">测试驱动开发(TDD)</a>是一种软件开发流程，依赖于重复如下一小段开发周期：
</p>
<ol class="org-ol">
<li>开发者定义一个初始将失败的自动测试用例，这个用例用来实现需要的改进或新的功能;
</li>
<li>写出最小的代码来通过此测试;
</li>
<li><a href="http://en.wikipedia.org/wiki/Code_refactoring">重构</a>这段新代码来符合规范。
</li>
</ol>

<p>
TDD有它自身的
<a href="http://en.wikipedia.org/wiki/Test-driven_development#Benefits">优点</a>与
<a href="http://en.wikipedia.org/wiki/Test-driven_development#Vulnerabilities">缺点</a>
</p>

<!-- more -->

<p>
TDD的一个周期可以总结如下:<sup><a id="fnr.1" name="fnr.1" class="footref" href="#fn.1">1</a></sup>
</p>
<ol class="org-ol">
<li>快速加一个测试
</li>
<li>运行所有测试，然后发现新测试失败
</li>
<li>修改代码，让新测试通过
</li>
<li>运行所有测试并都通过
</li>
<li>重构代码
</li>
</ol>

<img src="http://shishougang.github.com/images/blog/2014/Test-driven_development.PNG" title="'TDD'" />
</div>
</div>
<div id="outline-container-sec-1-2" class="outline-3">
<h3 id="sec-1-2"><span class="section-number-3">1.2</span> 单元测试与其框架</h3>
<div class="outline-text-3" id="text-1-2">
<p>
<a href="http://en.wikipedia.org/wiki/Unit_testing">单元测试(unit testing)</a>是测试一小段独立代码其是否正确的一种方法。
</p>

<p>
单元测试的目标是隔离程序的每个部件并证明这些单个部件是正确的。一个单元测
试提供了代码片断需要满足的严密的规约。因此，单元测试带来了一些益处：
</p>
<ol class="org-ol">
<li>尽早找出问题。在TDD开发中，一般单元测试程序先写与代码。
</li>
<li>适应变更。单元测试允许程序员在未来重构代码时，确保代码依然工作正确。
</li>
<li>简化集成。单元测试消除程序单元的不可靠，适合于自底向上的测试方法。通
过先测试程序部件再测试部件组装，使集成测试变得更加简单。
</li>
<li>文档记录。单元测试提供了系统的一种文档记录。借助于查看单元测试提供
的功能和单元测试中如何使用程序单元，开发人员可以直观的理解程序单元
的基础API。
</li>
<li>表达设计。在测试驱动开发的软件实践中，单元测试可以取代正式的设计。
每一个单元测试案例均可以视为一项类、方法和待观察行为等设计元素。
</li>
</ol>
</div>

<div id="outline-container-sec-1-2-1" class="outline-4">
<h4 id="sec-1-2-1"><span class="section-number-4">1.2.1</span> 单元测试的框架</h4>
<div class="outline-text-4" id="text-1-2-1">
<p>
为了简单与系统化单元测试过程，基本借助于单元测试框架。如今基本任何编程
语言都有几套自身的单元测试框架。而且广泛使用的框架都是<a href="http://en.wikipedia.org/wiki/XUnit">属于xUnit家族</a>
（CppUnit, JUnit, PyUnit, and etc.)。xUnit系的框架易于使用，提供一套自
动化测试的方案。所有的xUint框架拥有如下的基本元件框架：
</p>
<ul class="org-ul">
<li>Assertions。验证程序某一结果。
</li>
<li>Test case（测试用例）。包含某个功能的多个Assertions。
</li>
<li>Test suites（测试套件）。包含多个相关的测试用例。
</li>
<li>Test fixtures（测试夹具）。提供测试开始时执行数据或状态的初始化，结
束时执行数据或状态的清理工作。
</li>
<li>同时包括Test runner，Test execution和Test result formatter。
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-1-2-2" class="outline-4">
<h4 id="sec-1-2-2"><span class="section-number-4">1.2.2</span> 模仿对象</h4>
<div class="outline-text-4" id="text-1-2-2">
<p>
在单元测试中，模拟对象可以模拟复杂的、真实的（非模拟）对象的行为， 如
果真实的对象无法放入单元测试中，使用模拟对象就很有帮助。
</p>

<p>
在下面的情形，可能使用模拟对象来代替真实对象更好:
</p>
<ul class="org-ul">
<li>真实对象的行为是不确定的（例如，当前的时间或当前的温度）；
</li>
<li>真实对象很难搭建起来；
</li>
<li>真实对象的行为很难触发（例如，网络错误）；
</li>
<li>真实对象速度很慢（例如，一个完整的数据库，在测试之前可能需要初始化）；
</li>
<li>真实对象可能还不存在或之后会改动；
</li>
<li>真实对象可能包含不能用作测试（而不是为实际工作）的信息和方法。
</li>
</ul>

<p>
模拟对象具有和要模拟的真实对象的相同的接口，可以让调用该接口的对象不知
道在使用真实对象还是模拟对象。现有的许多模拟对象框架允许程序员指定模拟
对象上的哪些方法，将按照什么顺序被调用，以及传入什么参数，将返回什么值。
这样，复杂对象（例如网络套接字）的行为将可以使用模拟对象来模拟，允许程
序员来发现被测对象在可能各种存在的状态是否响应正确。
</p>

<p>
典型的流程基本如下：
</p>
<ol class="org-ol">
<li>指定你需要测试的类的接口
</li>
<li>根据接口，用某个模拟框架来创建一个模拟类
</li>
<li>接下来就如单元测试一样，建立测试用例，用这个模拟对象代替实际的对象。
一般按照如下进行：
<ul class="org-ul">
<li>首先创建模拟类实例
</li>
<li>针对模拟类，设置它的预期的行为。也就是那个方法被会被调用，数据返
回什么对于特定调用等。
</li>
<li>针对模拟类的行为，调用并判断预期的结果是否符合实际要求。
</li>
</ul>
</li>
</ol>
</div>
</div>
</div>

<div id="outline-container-sec-1-3" class="outline-3">
<h3 id="sec-1-3"><span class="section-number-3">1.3</span> 如何组织测试实例</h3>
<div class="outline-text-3" id="text-1-3">
<p>
应该为所有外部可以访问的函数创建单元测试：没有定义为static的自由函数，
类里的公共函数。单元测试应该涵盖函数的主要运行路径，包括不同的分支，循
环等。必须处理细小的，边缘情况，提供错误或随即的数据，使得你能测试你的
错误处理功能。
</p>

<p>
如何写好单元测试（比如每个测试只做一件事，测试需要短小而简洁等），需要
好好设计与思考，比较好的单元测试指南<a href="http://geosoft.no/development/unittesting.html">这里</a>.
</p>

<p>
把很多个测试用例组合到一个大的函数中，是否更好提供代码的可读性与提高它
的简洁性呢。并不是，这样做并不好，参考<a href="http://www.boost.org/doc/libs/1_45_0/libs/test/doc/html/utf/user-guide/test-organization.html">这里</a>.
</p>

<p>
代码的可测试性同样依赖于代码的设计上。很多时候很难写好单元测试，是因为
要测试的功能隐藏在很多个接口里，或存在很多的互相依赖以致很难正确初始化
它们。基本的代码设计原则是：
</p>
<ul class="org-ul">
<li>代码需要松耦合——类或函数越少的依赖越好;
</li>
<li>避免设计复杂的大函数，尽量一个函数做一件事情;
</li>
<li>尽量减少公共接口。
</li>
</ul>

<p>
更多的模式设计原则在
<a href="http://googletesting.blogspot.hk/2008/08/by-miko-hevery-so-you-decided-to.html">Google Test Blog</a>
</p>
</div>
</div>
</div>
<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> 面向C++的测试实例</h2>
<div class="outline-text-2" id="text-2">
</div><div id="outline-container-sec-2-1" class="outline-3">
<h3 id="sec-2-1"><span class="section-number-3">2.1</span> 面向C++的单元测试</h3>
<div class="outline-text-3" id="text-2-1">
<p>
使用GTest做单元测试和使用Gmock做模拟类测试。
</p>
</div>

<div id="outline-container-sec-2-1-1" class="outline-4">
<h4 id="sec-2-1-1"><span class="section-number-4">2.1.1</span> 面向C++的单元测试和GTest实践</h4>
<div class="outline-text-4" id="text-2-1-1">
<p>
现在有很多C++的<a href="http://en.wikipedia.org/wiki/List_of_unit_testing_frameworks#C.2B.2B">单元测试框架</a>。最受欢迎的是<a href="https://code.google.com/p/googletest/">Google C++ Testing Framework</a>
和<a href="http://www.boost.org/doc/libs/1_55_0/libs/test/doc/html/index.html">Boost.Test</a>。 两者有很多相似之处，这里针对Google Testing Framework展
开一个简单的实例。整个代码可以在<a href="https://github.com/shishougang/cpp_test_examples">github下载</a>。
</p>

<p>
Google C++ Testing Framework提供比较完善的文档，现在更新到V1.7：
</p>
<ul class="org-ul">
<li><a href="https://code.google.com/p/googletest/wiki/V1_7_Primer">入门</a>
</li>
<li><a href="https://code.google.com/p/googletest/wiki/V1_7_Samples">例子</a>
</li>
<li><a href="https://code.google.com/p/googletest/wiki/V1_7_AdvancedGuide">高级指南</a>
</li>
<li><a href="https://code.google.com/p/googletest/wiki/V1_7_FAQ">FAQ</a>
</li>
</ul>

<p>
使用Google C++ Testing Framework基本流程：
</p>
<ol class="org-ol">
<li>建立要测试类或函数的单元测试文件，一般命名 <code>name_unittest.cc</code>, 包含
   <code>&lt;gtest/gtest.h&gt;</code> 头文件；
</li>
<li>针对类或函数的功能，建立相对应的测试用例，一般就是一大堆的assertion，
检验希望得到的返回值是否正确；
</li>
<li>编译后，链接GTest相应的库 <code>gtest gtest_main</code> ；
</li>
<li>运行单元测试程序，或输出测试结果，或直接查看
</li>
</ol>
</div>

<div id="outline-container-sec-2-1-1-1" class="outline-5">
<h5 id="sec-2-1-1-1"><span class="section-number-5">2.1.1.1</span> 使用Google Test提供的第一个实例</h5>
<div class="outline-text-5" id="text-2-1-1-1">
<p>
<code>sample1.c</code> 有两个需要测试的函数：
</p>
<div class="org-src-container">

<pre class="src src-c"><span style="color: #98fb98;">int</span> <span style="color: #87cefa;">Factorial</span>(<span style="color: #98fb98;">int</span> <span style="color: #eedd82;">n</span>) {
  <span style="color: #98fb98;">int</span> <span style="color: #eedd82;">result</span> = 1;
  <span style="color: #00ffff;">for</span> (<span style="color: #98fb98;">int</span> <span style="color: #eedd82;">i</span> = 1; i &lt;= n; i++) {
    result *= i;
  }

  <span style="color: #00ffff;">return</span> result;
}

<span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">Returns true iff n is a prime number.</span>
<span style="color: #98fb98;">bool</span> <span style="color: #87cefa;">IsPrime</span>(<span style="color: #98fb98;">int</span> <span style="color: #eedd82;">n</span>) {
  <span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">Trivial case 1: small numbers</span>
  <span style="color: #00ffff;">if</span> (n &lt;= 1) <span style="color: #00ffff;">return</span> <span style="color: #7fffd4;">false</span>;

  <span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">Trivial case 2: even numbers</span>
  <span style="color: #00ffff;">if</span> (n % 2 == 0) <span style="color: #00ffff;">return</span> n == 2;

  <span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">Now, we have that n is odd and n &gt;= 3.</span>

  <span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">Try to divide n by every odd number i, starting from 3</span>
  <span style="color: #00ffff;">for</span> (<span style="color: #98fb98;">int</span> <span style="color: #eedd82;">i</span> = 3; ; i += 2) {
    <span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">We only have to try i up to the squre root of n</span>
    <span style="color: #00ffff;">if</span> (i &gt; n/i) <span style="color: #00ffff;">break</span>;

    <span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">Now, we have i &lt;= n/i &lt; n.</span>
    <span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">If n is divisible by i, n is not prime.</span>
    <span style="color: #00ffff;">if</span> (n % i == 0) <span style="color: #00ffff;">return</span> <span style="color: #7fffd4;">false</span>;
  }

  <span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">n has no integer factor in the range (1, n), and thus is prime.</span>
  <span style="color: #00ffff;">return</span> <span style="color: #7fffd4;">true</span>;
}
</pre>
</div>

<p>
创建它的一个单元测试文件 <code>sample1_unittest.c</code> 。
单元测试文件清晰的设计了各个测试。
</p>
<div class="org-src-container">

<pre class="src src-c"><span style="color: #87cefa;">TEST</span>(<span style="color: #98fb98;">FactorialTest</span>, <span style="color: #98fb98;">Negative</span>) {
  <span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">This test is named "Negative", and belongs to the "FactorialTest"</span>
  <span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">test case.</span>
  EXPECT_EQ(1, Factorial(-5));
  EXPECT_EQ(1, Factorial(-1));
  EXPECT_GT(Factorial(-10), 0);

  <span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">&lt;TechnicalDetails&gt;</span>
  <span style="color: #ff7f24;">//</span>
  <span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">EXPECT_EQ(expected, actual) is the same as</span>
  <span style="color: #ff7f24;">//</span>
  <span style="color: #ff7f24;">//   </span><span style="color: #ff7f24;">EXPECT_TRUE((expected) == (actual))</span>
  <span style="color: #ff7f24;">//</span>
  <span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">except that it will print both the expected value and the actual</span>
  <span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">value when the assertion fails.  This is very helpful for</span>
  <span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">debugging.  Therefore in this case EXPECT_EQ is preferred.</span>
  <span style="color: #ff7f24;">//</span>
  <span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">On the other hand, EXPECT_TRUE accepts any Boolean expression,</span>
  <span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">and is thus more general.</span>
  <span style="color: #ff7f24;">//</span>
  <span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">&lt;/TechnicalDetails&gt;</span>
}

<span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">Tests factorial of 0.</span>
<span style="color: #87cefa;">TEST</span>(<span style="color: #98fb98;">FactorialTest</span>, <span style="color: #98fb98;">Zero</span>) {
  EXPECT_EQ(1, Factorial(0));
}

<span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">Tests factorial of positive numbers.</span>
<span style="color: #87cefa;">TEST</span>(<span style="color: #98fb98;">FactorialTest</span>, <span style="color: #98fb98;">Positive</span>) {
  EXPECT_EQ(1, Factorial(1));
  EXPECT_EQ(2, Factorial(2));
  EXPECT_EQ(6, Factorial(3));
  EXPECT_EQ(40320, Factorial(8));
}


<span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">Tests IsPrime()</span>

<span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">Tests negative input.</span>
<span style="color: #87cefa;">TEST</span>(<span style="color: #98fb98;">IsPrimeTest</span>, <span style="color: #98fb98;">Negative</span>) {
  <span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">This test belongs to the IsPrimeTest test case.</span>

  EXPECT_FALSE(IsPrime(-1));
  EXPECT_FALSE(IsPrime(-2));
  EXPECT_FALSE(IsPrime(INT_MIN));
}

<span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">Tests some trivial cases.</span>
<span style="color: #87cefa;">TEST</span>(<span style="color: #98fb98;">IsPrimeTest</span>, <span style="color: #98fb98;">Trivial</span>) {
  EXPECT_FALSE(IsPrime(0));
  EXPECT_FALSE(IsPrime(1));
  EXPECT_TRUE(IsPrime(2));
  EXPECT_TRUE(IsPrime(3));
}

<span style="color: #ff7f24;">// </span><span style="color: #ff7f24;">Tests positive input.</span>
<span style="color: #87cefa;">TEST</span>(<span style="color: #98fb98;">IsPrimeTest</span>, <span style="color: #98fb98;">Positive</span>) {
  EXPECT_FALSE(IsPrime(4));
  EXPECT_TRUE(IsPrime(5));
  EXPECT_FALSE(IsPrime(6));
  EXPECT_TRUE(IsPrime(23));
}
</pre>
</div>

<p>
编译并运行单元测试程序[下面说如何把GTest框架融合进自己的工程里]
</p>

<div class="org-src-container">

<pre class="src src-sh">Running main() from gtest_main.cc
[==========] Running 6 tests from 2 test cases.
[----------] Global test environment set-up.
[----------] 3 tests from FactorialTest
[ RUN      ] FactorialTest.Negative
[       OK ] FactorialTest.Negative (0 ms)
[ RUN      ] FactorialTest.Zero
[       OK ] FactorialTest.Zero (0 ms)
[ RUN      ] FactorialTest.Positive
[       OK ] FactorialTest.Positive (0 ms)
[----------] 3 tests from FactorialTest (0 ms total)

[----------] 3 tests from IsPrimeTest
[ RUN      ] IsPrimeTest.Negative
[       OK ] IsPrimeTest.Negative (0 ms)
[ RUN      ] IsPrimeTest.Trivial
[       OK ] IsPrimeTest.Trivial (0 ms)
[ RUN      ] IsPrimeTest.Positive
[       OK ] IsPrimeTest.Positive (0 ms)
[----------] 3 tests from IsPrimeTest (0 ms total)

[----------] Global test environment tear-down
[==========] 6 tests from 2 test cases ran. (0 ms total)
[  PASSED  ] 6 tests.
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-sec-2-1-2" class="outline-4">
<h4 id="sec-2-1-2"><span class="section-number-4">2.1.2</span> 如何把GTest融合进你的CMake工程里</h4>
<div class="outline-text-4" id="text-2-1-2">
<p>
<a href="https://code.google.com/p/googletest/wiki/V1_7_FAQ#Why_is_it_not_recommended_to_install_a_pre-compiled_copy_of_Goog">GTest文档并不建议使用提前编译好复制的GTest</a>, 因为如果你编译Google Test
和你的测试代码使用不同的编译标志，他们可能会看到不同定义但是相同的类或
函数或变量（比如：因为使用 <code>#if</code> 在Google Test中）。当程序链接起来，连
接器可能并不能捕捉到错误（因为在C++标准中并没有要求捕捉这样的违规),那
么当它们链接起来后，程序在运行时会产生一些不可预期的行为，使得非常难调
试。
</p>

<p>
所以这里我们把Google Test的源代码直接融合进我们的CMake工程里，让它一起
编译，并把测试用例添加入 <code>make test</code> , 具体见<a href="https://github.com/shishougang/cpp_test_examples">github</a>。
</p>

<ol class="org-ol">
<li>把gtest的工程放在我们工程的thirdparty文件里。
</li>
<li>定义gtest的library和包含其目录编译它
</li>
</ol>

<div class="org-src-container">

<pre class="src src-sh"><span style="color: #87cefa;">SET</span> (MAINFOLDER ${<span style="color: #eedd82;">PROJECT_SOURCE_DIR</span>})
<span style="color: #87cefa;">add_subdirectory</span>(${<span style="color: #eedd82;">MAINFOLDER</span>}/thirdparty/gtest)
<span style="color: #b0c4de;">set</span>(GTEST_ROOT ${<span style="color: #eedd82;">MAINFOLDER</span>}/thirdparty/gtest)
<span style="color: #b0c4de;">set</span>(GTEST_INCLUDE_DIR ${<span style="color: #eedd82;">GTEST_ROOT</span>}/include)
<span style="color: #b0c4de;">set</span>(GTEST_LIBRARIES gtest gtest_main)
<span style="color: #87cefa;">include_directories</span>(${<span style="color: #eedd82;">GTEST_INCLUDE_DIR</span>})
<span style="color: #87cefa;">include</span>(gtest)
</pre>
</div>

<ol class="org-ol">
<li>编译单元测试时链接gtest的lib
</li>
</ol>
<div class="org-src-container">

<pre class="src src-sh"><span style="color: #ff7f24;"># </span><span style="color: #ff7f24;">Define an executable and adds a test for it using the most basic libraries</span>
<span style="color: #ff7f24;"># </span><span style="color: #ff7f24;">Args:</span>
<span style="color: #ff7f24;">#    </span><span style="color: #ff7f24;">name  - name of test. Must have a source file in test/&lt;name&gt;.cc</span>
<span style="color: #ff7f24;">#    </span><span style="color: #ff7f24;">...   - optional list of additional library dependencies</span>
<span style="color: #00ffff;">function</span>(project_test name)
  add_executable(${<span style="color: #eedd82;">name</span>} test/${<span style="color: #eedd82;">name</span>}.cc)
  <span style="color: #00ffff;">foreach</span> (lib <span style="color: #ffa07a;">"${ARGN}"</span>)
    target_link_libraries(${<span style="color: #eedd82;">name</span>} ${<span style="color: #eedd82;">lib</span>})
  endforeach()
  target_linK_libraries(${<span style="color: #eedd82;">name</span>} ${<span style="color: #eedd82;">GTEST_LIBRARIES</span>})
  add_test(${<span style="color: #eedd82;">name</span>} ${<span style="color: #eedd82;">EXECUTABLE_OUTPUT_PATH</span>}/${<span style="color: #eedd82;">name</span>})
<span style="color: #87cefa;">endfunction</span>()

<span style="color: #00ffff;">if</span> (build_tests)
  project_test(sample1_unittest sample1)
<span style="color: #87cefa;">endif</span>()
</pre>
</div>
</div>
</div>
<div id="outline-container-sec-2-1-3" class="outline-4">
<h4 id="sec-2-1-3"><span class="section-number-4">2.1.3</span> GMock实践</h4>
<div class="outline-text-4" id="text-2-1-3">
<p>
现在针对Ｃ＋＋的模拟框架有：<a href="https://code.google.com/p/googlemock/"> Google C++ mocking framework</a>, <a href="http://www.assembla.com/wiki/show/hippomocks">HippoMocks</a>,
<a href="https://code.google.com/p/amop/">AMOP</a>, <a href="http://sourceforge.net/apps/mediawiki/turtle/index.php?title=Turtle">Turtle</a> 等。其中Google mocking framework比较完善并持续维护，我们
将使用它。
</p>

<p>
Google mocking framework有完善的文档，在其
<a href="https://code.google.com/p/googlemock/w/list">wiki 页面</a>。现在的Mocking版本里已经包括Google C++ Testing Framework，不
需要分别编译和安装。
</p>

<p>
使用Google Mocking Framework基本流程：
</p>
<ol class="org-ol">
<li>对所给类创建它的一个模拟对象。使用提供的很多宏来定义需要模拟的函数，
也提供了一个工具 <code>gmock_gen.py</code> 在Google Mock的目录
<code>scripts/generator/</code> 下， 用它自动生成模拟类的定义。
</li>
<li>对你的模拟类，创建相应的测试用例。一般流程是：
<ul class="org-ul">
<li>创建模拟类，使用提供的宏或函数，针对不同的场景，设置模拟类接口相
应的行为，比如调用多少次，返回什么值等等
</li>
<li>有了这个模拟类，测试需要用到它的接口或功能。创建相应的测试用例
</li>
</ul>
</li>
</ol>
</div>
<div id="outline-container-sec-2-1-3-1" class="outline-5">
<h5 id="sec-2-1-3-1"><span class="section-number-5">2.1.3.1</span> 需要模拟的源文件</h5>
<div class="outline-text-5" id="text-2-1-3-1">
<p>
现在有一个简单的Offset类，其中有一个虚函数接口 <code>virtual int
DoSetOffset(int offset) = 0;</code> ，暂时没有创建继承类来实现这个接口，先用
Gmock模拟这个接口（必须是虚函数才能被覆盖模拟它）行为来做到单元测试这
个类。
</p>

<div class="org-src-container">

<pre class="src src-c"><span style="color: #ff7f24;">//</span><span style="color: #ff7f24;">sample.h</span>
<span style="color: #98fb98;">class</span> <span style="color: #eedd82;">MyOffset</span>{
 <span style="color: #7fffd4;">public</span>:
  <span style="color: #eedd82;">MyOffset</span>() {}
  virtual ~MyOffset() {}

  <span style="color: #ff7f24;">/*</span>
<span style="color: #ff7f24;">   * Set the offsest</span>
<span style="color: #ff7f24;">   </span><span style="color: #ff7f24;">*/</span>
  <span style="color: #98fb98;">int</span> <span style="color: #eedd82;">SetOffset</span>(<span style="color: #98fb98;">int</span> <span style="color: #eedd82;">offset</span>);

  <span style="color: #ff7f24;">/*</span>
<span style="color: #ff7f24;">   * Returns the current offset</span>
<span style="color: #ff7f24;">   </span><span style="color: #ff7f24;">*/</span>
  <span style="color: #98fb98;">int</span> <span style="color: #eedd82;">offset</span>() <span style="color: #00ffff;">const</span> { <span style="color: #00ffff;">return</span> offset_; }

 protected:
  <span style="color: #ff7f24;">/*</span>
<span style="color: #ff7f24;">   * Set the offset</span>
<span style="color: #ff7f24;">   *</span>
<span style="color: #ff7f24;">   * This method is called by the public SetOffset() method.</span>
<span style="color: #ff7f24;">   </span><span style="color: #ff7f24;">*/</span>
  virtual <span style="color: #98fb98;">int</span> DoSetOffset(<span style="color: #98fb98;">int</span> <span style="color: #eedd82;">offset</span>) = 0;

 <span style="color: #7fffd4;">private</span>:
  <span style="color: #98fb98;">int</span> <span style="color: #eedd82;">offset_</span>; 
};
</pre>
</div>

<p>
函数 <code>int SetOffset(int offset);</code> 是外部接口，内部调用虚函数 <code>int
DoSetOffset(int offset)</code>
</p>

<div class="org-src-container">

<pre class="src src-c"><span style="color: #ff7f24;">//</span><span style="color: #ff7f24;">sample.c</span>
<span style="color: #98fb98;">int</span> <span style="color: #87cefa;">MyOffset</span>::SetOffset(<span style="color: #98fb98;">int</span> <span style="color: #eedd82;">offset</span>) {
  <span style="color: #00ffff;">if</span> (offset &lt; 0) {
    offset_ = -1;
    <span style="color: #00ffff;">return</span> -1;
  }
  offset_ = DoSetOffset(offset);
  <span style="color: #00ffff;">return</span> offset_;
}
</pre>
</div>
</div>
</div>
<div id="outline-container-sec-2-1-3-2" class="outline-5">
<h5 id="sec-2-1-3-2"><span class="section-number-5">2.1.3.2</span> 利用GMock创建模拟类</h5>
<div class="outline-text-5" id="text-2-1-3-2">
<p>
在单元测试文件（ <code>sample_test.cc</code> ）里包含GMock和GTest的头文件
</p>
<div class="org-src-container">

<pre class="src src-c"><span style="color: #b0c4de;">#include</span> <span style="color: #ffa07a;">&lt;gmock/gmock.h&gt;</span>
<span style="color: #b0c4de;">#include</span> <span style="color: #ffa07a;">&lt;gtest/gtest.h&gt;</span>
</pre>
</div>

<p>
创建模拟类：
</p>
<div class="org-src-container">

<pre class="src src-c"><span style="color: #98fb98;">class</span> <span style="color: #eedd82;">MockMyOffset</span> : public MyOffset {
 <span style="color: #7fffd4;">public</span>:
  <span style="color: #eedd82;">MockMyOffset</span>() {}
  virtual ~MockMyOffset() {}

  MOCK_METHOD1(DoSetOffset, <span style="color: #98fb98;">int</span>(<span style="color: #98fb98;">int</span> <span style="color: #eedd82;">offset</span>));
};
</pre>
</div>
</div>
</div>
<div id="outline-container-sec-2-1-3-3" class="outline-5">
<h5 id="sec-2-1-3-3"><span class="section-number-5">2.1.3.3</span> 配置模拟类的行为并创建测试用例</h5>
<div class="outline-text-5" id="text-2-1-3-3">
<p>
有了模拟类，配置模拟类中的函数的行为，并利用GTest做结果验证：
</p>

<div class="org-src-container">

<pre class="src src-c"><span style="color: #87cefa;">TEST</span>(<span style="color: #98fb98;">MyOffsetTest</span>, <span style="color: #98fb98;">SetOffset</span>) {
  <span style="color: #98fb98;">MockMyOffset</span> <span style="color: #eedd82;">my_offset</span>;
  <span style="color: #ff7f24;">/* </span><span style="color: #ff7f24;">&#24403;DoSetOffset&#30340;&#36827;&#20837;&#21442;&#25968;&#26159;10,&#23601;&#36820;&#22238;&#19968;&#27425;10 </span><span style="color: #ff7f24;">*/</span>
  EXPECT_CALL(my_offset, DoSetOffset(10)).WillOnce(Return(10));
  EXPECT_EQ(10, my_offset.SetOffset(10));
  EXPECT_EQ(10, my_offset.offset());

  EXPECT_CALL(my_offset, DoSetOffset(5)).WillOnce(Return(5));
  EXPECT_EQ(5, my_offset.SetOffset(5));
  EXPECT_EQ(5, my_offset.offset());

  EXPECT_CALL(my_offset, DoSetOffset(20)).WillOnce(Return(1));
  EXPECT_EQ(1, my_offset.SetOffset(20));
  EXPECT_EQ(1, my_offset.offset());

  EXPECT_CALL(my_offset, DoSetOffset(10)).WillOnce(Return(-1));
  EXPECT_EQ(-1, my_offset.SetOffset(10));
  EXPECT_EQ(-1, my_offset.offset());
}
</pre>
</div>
</div>
</div>
<div id="outline-container-sec-2-1-3-4" class="outline-5">
<h5 id="sec-2-1-3-4"><span class="section-number-5">2.1.3.4</span> 编译并运行单元测试</h5>
<div class="outline-text-5" id="text-2-1-3-4">
<div class="org-src-container">

<pre class="src src-sh">&#10140;  bin  ./sample_test 
Running main() from gtest_main.cc
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from MyOffsetTest
[ RUN      ] MyOffsetTest.SetOffset
[       OK ] MyOffsetTest.SetOffset (0 ms)
[----------] 1 test from MyOffsetTest (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (0 ms total)
[  PASSED  ] 1 test.
</pre>
</div>
</div>
</div>
</div>

<div id="outline-container-sec-2-1-4" class="outline-4">
<h4 id="sec-2-1-4"><span class="section-number-4">2.1.4</span> 如何把GMock融合进你的CMake工程里</h4>
<div class="outline-text-4" id="text-2-1-4">
<p>
和GTest一样，同样我们把包含GTest的GMock融合进我们的CMake工程里，和我们
工程一同编译。<a href="https://github.com/shishougang/cpp_test_examples">源文件</a>。
</p>


<ol class="org-ol">
<li>把gmock的工程放在我们工程的thirdparty文件里。
</li>
<li>定义gtest和gmock的library和包含其目录编译它
</li>
</ol>

<div class="org-src-container">

<pre class="src src-sh"><span style="color: #b0c4de;">set</span>(GMOCK_ROOT ${<span style="color: #eedd82;">MAINFOLDER</span>}/thirdparty/gmock)
<span style="color: #87cefa;">add_subdirectory</span>(${<span style="color: #eedd82;">GMOCK_ROOT</span>})
<span style="color: #b0c4de;">set</span>(GMOCK_INCLUDE_DIR ${<span style="color: #eedd82;">GMOCK_ROOT</span>}/include)
<span style="color: #b0c4de;">set</span>(GMOCK_LIBRARIES gmock)
<span style="color: #87cefa;">include_directories</span>(${<span style="color: #eedd82;">GMOCK_INCLUDE_DIR</span>})
 include(gmock)
  <span style="color: #ff7f24;">#</span><span style="color: #ff7f24;">gtest</span>
<span style="color: #b0c4de;">set</span>(GTEST_ROOT ${<span style="color: #eedd82;">GMOCK_ROOT</span>}/gtest)
<span style="color: #b0c4de;">set</span>(GTEST_INCLUDE_DIR ${<span style="color: #eedd82;">GTEST_ROOT</span>}/include)
<span style="color: #b0c4de;">set</span>(GTEST_LIBRARIES gtest gtest_main)
<span style="color: #87cefa;">include_directories</span>(${<span style="color: #eedd82;">GTEST_INCLUDE_DIR</span>})
</pre>
</div>

<ol class="org-ol">
<li>编译单元测试时链接gtest和gmock的lib
</li>
</ol>

<div class="org-src-container">

<pre class="src src-sh"><span style="color: #ff7f24;"># </span><span style="color: #ff7f24;">Define an executable and adds a test for it using the most basic libraries</span>
<span style="color: #ff7f24;"># </span><span style="color: #ff7f24;">Args:</span>
<span style="color: #ff7f24;">#    </span><span style="color: #ff7f24;">name  - name of test. Must have a source file in test/&lt;name&gt;.cc</span>
<span style="color: #ff7f24;">#    </span><span style="color: #ff7f24;">...   - optional list of additional library dependencies</span>
<span style="color: #00ffff;">function</span>(project_test name)
  add_executable(${<span style="color: #eedd82;">name</span>} test/${<span style="color: #eedd82;">name</span>}.cc)
  <span style="color: #00ffff;">foreach</span> (lib <span style="color: #ffa07a;">"${ARGN}"</span>)
    target_link_libraries(${<span style="color: #eedd82;">name</span>} ${<span style="color: #eedd82;">lib</span>})
  endforeach()
  target_linK_libraries(${<span style="color: #eedd82;">name</span>} ${<span style="color: #eedd82;">GTEST_LIBRARIES</span>})
  target_linK_libraries(${<span style="color: #eedd82;">name</span>} ${<span style="color: #eedd82;">GMOCK_LIBRARIES</span>})
  add_test(${<span style="color: #eedd82;">name</span>} ${<span style="color: #eedd82;">EXECUTABLE_OUTPUT_PATH</span>}/${<span style="color: #eedd82;">name</span>})
<span style="color: #87cefa;">endfunction</span>()

<span style="color: #00ffff;">if</span> (build_tests)
  project_test(sample_test sample)
<span style="color: #87cefa;">endif</span>()
</pre>
</div>
</div>
</div>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> 其他资料</h2>
<div class="outline-text-2" id="text-3">
</div><div id="outline-container-sec-3-1" class="outline-3">
<h3 id="sec-3-1"><span class="section-number-3">3.1</span> Books:</h3>
<div class="outline-text-3" id="text-3-1">
<ul class="org-ul">
<li>Kent Beck. Test-driven development: By example;
</li>
<li>David Astels. Test Driven Development: A Practical Guide;
</li>
<li>Robert C. Martin. Clean Code: A Handbook of Agile Software Craftsmanship (this book is mostly for Java developers);
</li>
<li>Michael Feathers. Working Effectively with Legacy Code;
</li>
<li>Martin Fowler, Kent Beck, John Brant, William Opdyke, Don Roberts. Refactoring: Improving the Design of Existing Code;
</li>
<li>Steve McConnell, Code Complete, 2ed 
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-3-2" class="outline-3">
<h3 id="sec-3-2"><span class="section-number-3">3.2</span> Online resources:</h3>
<div class="outline-text-3" id="text-3-2">
<ul class="org-ul">
<li><a href="http://stackoverflow.com/questions/tagged/unit-testing">Unit testing topic at StackOverflow</a>;
</li>
<li><a href="http://googletesting.blogspot.com/">Google Testing Blog</a>;
</li>
<li>Wiki at <a href="http://c2.com/cgi/wiki?UnitTest">c2.com</a>;
</li>
<li><a href="http://www.lenholgate.com/blog/2004/05/practical-testing.html">Practical Testing</a> — series of blog posts on testing.
</li>
<li><a href="http://alexott.net/en/cpp/CppTestingIntro.html">Boost.Test and GMock Tutorial</a>
</li>
</ul>
</div>
</div>
</div>
<div id="footnotes">
<h2 class="footnotes">Footnotes: </h2>
<div id="text-footnotes">

<div class="footdef"><sup><a id="fn.1" name="fn.1" class="footnum" href="#fnr.1">1</a></sup> <p class="footpara">
<a href="http://en.wikipedia.org/wiki/Test-Driven_Development_by_Example">http://en.wikipedia.org/wiki/Test-Driven_Development_by_Example</a>
</p></div>


</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac Pro Install Ubuntu 12.04]]></title>
    <link href="http://shishougang.github.com/blog/2012/11/28/Mac-pro-install-Ubuntu-12.04/"/>
    <updated>2012-11-28T18:27:00+08:00</updated>
    <id>http://shishougang.github.com/blog/2012/11/28/Mac-pro-install-Ubuntu-12.04</id>
    <content type="html"><![CDATA[<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Determine your hardware revision<sup><a id="fnr.1" name="fnr.1" class="footref" href="#fn.1">1</a></sup></h2>
<div class="outline-text-2" id="text-1">
</div><ol class="org-ol"><li>OS X<br /><div class="outline-text-3" id="text-1-1">
<p>
click in OS X on the Apple on the top left, then &#8220;About this Mac&#8221; &#x2013; &#8220;More Info&#x2026;&#8221;, see the generation in the &#8220;Model Identifier&#8221; row; or &#x2026; 
</p>
</div>
</li>

<li>ubuntu<br /><div class="outline-text-3" id="text-1-2">
<div class="org-src-container">

<pre class="src src-sh">sudo dmidecode -s system-product-name
</pre>
</div>

<!-- more -->
</div>
</li></ol>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Install rEFIt and Partition Your Mac&#8217;s Hard Drive(Dual-Boot: Mac OSX and Ubuntu)</h2>
<div class="outline-text-2" id="text-2">
</div><ol class="org-ol"><li>First, install the rEFIt boot manager<br /><div class="outline-text-3" id="text-2-1">
<p>
<a href="http://refit.sourceforge.net/doc/c1s1_install.html">http://refit.sourceforge.net/doc/c1s1_install.html</a>
To confirm that the app is working, reboot your system: if you see a
startup menu like the one below, you&#8217;re good. It may take a couple of
reboots to appear, but it worked on the first try for me.
</p>

<img class="right" src="http://shishougang.github.com/images/blog/2012/rEFIt.jpg" title="'rEFIt'" />
</div>
</li>
<li>Partition Your Mac&#8217;s Hard Drive<br /><ol class="org-ol"><li>Open Disk Utility (Applications &gt; Utilities &gt; Disk Utility.)<br /></li>
<li>Select your hard drive from the list on the left, and click the Partition tab on the right.<br /></li>
<li>You&#8217;ll see the current partition layout. Click the right corner of the current partition and shrink it to the size you want. The display will show you the minimum size, so don&#8217;t worry about going too far. Alternatively, just select the current partition and type in the final size<br /></li>
<li>Click apply. Disk Utility will shrink the current partition for you and free up space for your Ubuntu install.<br /></li></ol>
</li></ol>
</div>
<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Install Ubuntu</h2>
<div class="outline-text-2" id="text-3">
<p>
Now that your Mac&#8217;s hard drive has room for Ubuntu, pop in your
freshly burned Ubuntu CD and reboot. rEFIt will appear and ask you if
you&#8217;d like to boot to the CD. Select the CD and let Ubuntu start up.
It may take a while, but be patient. Once it&#8217;s up and running, it&#8217;ll
ask you if you want to try Ubuntu (as a Live CD) or install it.
</p>

<p>
start the Ubuntu Installer from the desktop icon. When prompted,
choose to manually partition. Select the EXT4 partition and click
change. Select to use the space as the EXT4 filesystem and root (/) as
the mount point. You will also want to check the box to format the
partition.
</p>

<p>
Note: if there is a warning for booting, I just ignore it and it
has no problem.
</p>
</div>
</div>
<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> Let rEFIt Fix Your Partition Tables</h2>
<div class="outline-text-2" id="text-4">
<p>
According to <a href="https://help.ubuntu.com/community/MactelSupportTeam/AppleIntelInstallation">Ubuntu&#8217;s Mactel</a> installation guide, there&#8217;s a bug in the
Ubuntu installer that can cause boot problems after installing and
cause problems booting into OS X or Ubuntu. Thankfully, it&#8217;s an easy
fix for rEFIt, you just have to boot into rEFIt&#8217;s partition tool and
check. Here&#8217;s how:
</p>

<ul class="org-ul">
<li>Reboot your Mac. When rEFIt appears, select the &#8220;Partition Tool&#8221; from the startup menu.
</li>
<li>The tool will load automatically. In most cases, rEFIt will notice
the problem, and ask you for permission to sync your partition
tables. Type &#8220;Y.&#8221;
</li>

<li>The process takes a couple of seconds, but when it&#8217;s finished, shut
down your Mac. rEFIt hasn&#8217;t read the new partition tables yet, so if
you try to boot into anything at this stage, your Mac will hang.
</li>

<li>Start your Mac again, and pick your preferred OS. If you enter the
Partition Tool again, you&#8217;ll see a notification that your partition
tables are in sync.
</li>
</ul>

<p>
Now here&#8217;s the catch: If the rEFIt partition tool tells you that the
tables are out of sync but doesn&#8217;t offer to fix them, or if you see
another strange error message, head over to <a href="https://help.ubuntu.com/community/MactelSupportTeam/AppleIntelInstallation#Detailed_How-To">this section of the Ubuntu
install guide</a> and scroll down to &#8220;Fix Your Partition Tables&#8221; for a
breakdown of what you should do for each type of error.
</p>
</div>
</div>
<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> configuration</h2>
<div class="outline-text-2" id="text-5">
</div><ol class="org-ol"><li>Screen(Not)<br /><div class="outline-text-3" id="text-5-1">
<p>
The resolution is right recognised, the LED-backlit works properly.
</p>

<p>
NOTE: In order to be able to adjust the brightness you will have to
install the apple-gmux package and boot with acpi<sub>backlight</sub>=vendor
kernel parameter which you can set e.g. in the /etc/default/grub file
in GRUB<sub>CMDLINE</sub><sub>LINUX</sub> line. Details:
<a href="https://wiki.ubuntu.com/Kernel/AppleGmuxBacklight">https://wiki.ubuntu.com/Kernel/AppleGmuxBacklight</a>
</p>
</div>
</li>
<li>Colors<br /><div class="outline-text-3" id="text-5-2">
<p>
import these profiles as .icc files in System Settings - Color by
 selecting the appropriate screen icon, clicking &#8220;add profile&#8221; and
 navigating to the .icc files (located in OS X under
 <code>/Users/username/Library/ColorSync/Profiles</code> or
 <code>/Library/ColorSync/Profiles/Displays</code>
 if the settings were saved for all users). After this, 
choosing the radio button under the new OS X profile should
 yield a nice color profile. 
</p>
</div>
</li>

<li>HFS+<br /><div class="outline-text-3" id="text-5-3">
<p>
HFS is mounted as Read-Only. By turning <a href="http://support.apple.com/kb/ht2355">journaling</a> off in OS X, the
HFS+ file system will be read/write under Linux. 
</p>

<p>
This is the recommended solution if you need read/write access to your OS X partition.
</p>

<p>
It&#8217;s also possible to mount HFS+ journaling-enabled volumes using the
&#8220;-o force,rw&#8221; option though this is extremely risky.
</p>

<p>
Leaving the HFS&#8217;s journaling turned on you&#8217;re able to access it as root. 
</p>
</div>
</li>

<li>Touchpad<br /><div class="outline-text-3" id="text-5-4">
<p>
Works fine out-of-the-box. You can disable the mouse-click with the
trackpad tap and the horizontal scrolling in Preferences.
</p>

<p>
Unity supports multitouch with this funcs:
</p>
<div class="org-src-container">

<pre class="src src-sh">1 finger
    <span style="color: #eedd82;">move</span> = move the cursor;
    <span style="color: #eedd82;">click</span> = <span style="color: #ffa07a;">"your-favourite-hand"</span>-click; 
2 fingers
    <span style="color: #eedd82;">move</span> = vertical/horizontal scrolling;
    <span style="color: #eedd82;">click</span> = <span style="color: #ffa07a;">"2nd-button"</span>-click; 
3 fingers
    <span style="color: #eedd82;">move</span> = move the window and shows resizing options; 
4 fingers
    <span style="color: #eedd82;">move</span> = show/hide the launcher (horizontal-scroll, enable auto-hide the launcher first);
    single-tap = show the dash.
</pre>
</div>
<p>
To get multitouch with just two finger scrolling and drag-and-drop
follow these instructions:
</p>

<div class="org-src-container">

<pre class="src src-sh">sudo add-apt-repository ppa:mactel-support &amp;&amp; sudo apt-get update
sudo apt-get install xserver-xorg-input-synaptics
</pre>
</div>
</div>

<ol class="org-ol"><li>Palm Recognition<br /><div class="outline-text-4" id="text-5-4-1">
<p>
By default palm recognition is not turned off, so you might have trouble moving the cursor or clicking something by brushing the trackpad with your palm while typing. To turn palm recognition on, open up a terminal and copy your default conf file:
</p>
<div class="org-src-container">

<pre class="src src-sh">sudo cp /usr/share/X11/xorg.conf.d/50-synaptics.conf /etc/X11/xorg.conf.d/my-synaptics.conf
</pre>
</div>
<p>
Now edit the new conf file:
</p>
<div class="org-src-container">

<pre class="src src-sh">gksudo gedit /etc/X11/xorg.conf.d/my-synaptics.conf
</pre>
</div>
<p>
and add the following line just before the EndSection marker of your input class:
</p>
<div class="org-src-container">

<pre class="src src-sh">Option <span style="color: #ffa07a;">"PalmDetect"</span> <span style="color: #ffa07a;">"on"</span>
</pre>
</div>
</div>
</li>

<li>Fine-tuning the touchpad<br /><div class="outline-text-4" id="text-5-4-2">
<p>
You can play with other options offered by Synaptic 
input drivers that are explained <a href="http://manpages.ubuntu.com/manpages/karmic/man4/synaptics.4.html">here</a> and in this <a href="http://uselessuseofcat.com/?p=74">blog post</a>. 
</p>
</div>
</li></ol>
</li>
<li><span class="todo TODO">TODO</span> External Monitor<br /><div class="outline-text-3" id="text-5-5">
<p>
External monitors connected via HDMI work out of the box.
</p>

<p>
If your external display&#8217;s native resolution is not recognised when
 connected via a VGA port (only a lower resolution, such as 800x600 is 
offered, for example), then you need to issue a couple of xrandr 
commands in a terminal to force add the desired resolution. 
The source of information for this fix comes from <a href="http://mac.linux.be/content/setting-xorgconf-manually-xrandr">here</a>.
</p>

<p>
To check that xrandr is installed issue:
</p>
<div class="org-src-container">

<pre class="src src-sh">$ sudo apt-get install xrandr
</pre>
</div>
<p>
You have to create a modeline using the gtf or cvt utility. For
example, if you want to add a mode with resolution 1920x1080, you can
enter the following command (The output is shown following):
</p>

<div class="org-src-container">

<pre class="src src-sh">$ cvt 1920 1080
<span style="color: #ff7f24;"># </span><span style="color: #ff7f24;">1920x1080 59.96 Hz (CVT 2.07M9) hsync: 67.16 kHz; pclk: 173.00 MHz</span>
Modeline <span style="color: #ffa07a;">"1920x1080_60.00"</span>  173.00  1920 2048 2248 2576  1080 1083 1088 1120 -hsync +vsync
</pre>
</div>
<p>
Then copy the information after the word &#8220;Modeline&#8221; into the xrandr command (which would in my example state):
</p>
<div class="org-src-container">

<pre class="src src-sh">xrandr --newmode <span style="color: #ffa07a;">"1920x1080_60.00"</span>  173.00  1920 2048 2248 2576  1080 1083 1088 1120 -hsync +vsync
</pre>
</div>
<p>
Now get the code of your external monitor by issuing xrandr. For me the external screen is branded DP1.
</p>

<p>
Now add this mode to the available ones for your external screen:
</p>
<div class="org-src-container">

<pre class="src src-sh">xrandr --addmode DP1 1920x1080_60.00
</pre>
</div>
<p>
And select it:
</p>
<div class="org-src-container">

<pre class="src src-sh">xrandr --output DP1 --mode 1920x1080_60.00
</pre>
</div>
<p>
If everything goes well, the resolution should be ok now and you&#8217;ll have the desired option in the normal display preferences. This will have to be repeated every time. The easiest way to automate the task, add the 3 xrandr commands to the ~/.xprofile file.
</p>
<div class="org-src-container">

<pre class="src src-sh">$ gedit ~/.xprofile
</pre>
</div>
<p>
The file should look something like:
</p>
<div class="org-src-container">

<pre class="src src-sh">xrandr --newmode <span style="color: #ffa07a;">"1920x1080_60.00"</span>  173.00  1920 2048 2248 2576  1080 1083 1088 1120 -hsync +vsync
xrandr --addmode DP1 1920x1080_60.00
xrandr --output DP1 --mode 1920x1080_60.00
</pre>
</div>
<p>
Afterwards, you have to add executable access to the file:
</p>
<div class="org-src-container">

<pre class="src src-sh">$ chmod +x ~/.xprofile
</pre>
</div>
<p>
Note: if you make a mistake in the .xprofile file, you might have trouble reverting back to normal settings - in this case you can always use ctrl+alt+F1 to open the shell interface and issue mv ~/.xprofile ~/.xprofile-old; sudo reboot to get the previous settings back. 
</p>
</div>
</li>
<li>Sound<br /><div class="outline-text-3" id="text-5-6">
<p>
Works out-of the box, but some volume corrections are necessary.
</p>

<p>
You can install gnome-alsamixer for a nice GUI to set up your sound:
</p>
<div class="org-src-container">

<pre class="src src-sh">sudo apt-get install gnome-alsamixer
</pre>
</div>
</div>
</li>

<li>Wireless(more <sup><a id="fnr.2" name="fnr.2" class="footref" href="#fn.2">2</a></sup>)<br /><div class="outline-text-3" id="text-5-7">
<p>
There is no official support yet in Ubuntu 11.10, but you can get
it working with the following repository:
</p>

<div class="org-src-container">

<pre class="src src-sh">sudo add-apt-repository ppa:mpodroid/mactel
sudo apt-get update
sudo apt-get install b43-fwcutter firmware-b43-installer
</pre>
</div>
<p>
Then install the <code>linux-backports-modules-cw-3.2-oneiric-generic</code> or, if
you have the pae kernel installed, the
<code>linux-backports-modules-cw-3.2-oneiric-generic-pae</code> package. While this
tutorial deals with Oneiric, the same instructions for the wireless
work for Precise, with the above installation of
&#8221;<code>linux-backports-modules-cw-3.2-oneiric-generic</code>&#8221; replaced with
&#8221;<code>linux-backports-modules-cw-3.3-precise-generic</code>&#8221; .
</p>


<p>
Edit the /etc/modprobe.d/blacklist.conf and add the line:
</p>
<div class="org-src-container">

<pre class="src src-sh">blacklist ndiswrapper
</pre>
</div>
<p>
Create or edit the file <code>/etc/pm/config.d/modules</code> and make sure the
wireless modules (b43 and bcma) are blacklisted:
</p>

<div class="org-src-container">

<pre class="src src-sh"><span style="color: #eedd82;">SUSPEND_MODULES</span>=<span style="color: #ffa07a;">"b43 bcma"</span>
</pre>
</div>
<p>
Reboot and the wireless should work. 
</p>
</div>
</li>
<li>Graphics<br /><div class="outline-text-3" id="text-5-8">
<p>
System info says
</p>
<div class="org-src-container">

<pre class="src src-sh">Graphics: unknown.  
Driver: unknown,  
Experience: Standard.
</pre>
</div>
<p>
it means that it cannot acquire the information because glxinfo is not installed on the system.
</p>

<p>
Install it by clicking here:
<a href="https://apps.ubuntu.com/cat/applications/mesa-utils/">https://apps.ubuntu.com/cat/applications/mesa-utils/</a>
Install via the software center
</p>

<p>
Or by typing:
</p>
<div class="org-src-container">

<pre class="src src-sh">sudo apt-get install mesa-utils
</pre>
</div>
</div>
</li></ol>
</div>
<div id="outline-container-sec-6" class="outline-2">
<h2 id="sec-6"><span class="section-number-2">6</span> Install Software</h2>
<div class="outline-text-2" id="text-6">
</div><ol class="org-ol"><li>lightum<sup><a id="fnr.3" name="fnr.3" class="footref" href="#fn.3">3</a></sup><br /><div class="outline-text-3" id="text-6-1">
<p>
Lightum is a daemon to control the keyboard brightness and screen backlight on MacBook based laptops.
</p>

<p>
If you are running Ubuntu, you can install it by adding lightum-mba ppa to your system:
</p>
<div class="org-src-container">

<pre class="src src-sh">sudo add-apt-repository ppa:poliva/lightum-mba
sudo apt-get update
sudo apt-get install lightum
</pre>
</div>
<p>
Otherwise, you can build it from <a href="https://github.com/poliva/lightum">source</a>. 
</p>
</div>
</li>

<li>lightum-indicator<sup><a id="fnr.4" name="fnr.4" class="footref" href="#fn.4">4</a></sup><br /><div class="outline-text-3" id="text-6-2">
<div class="org-src-container">

<pre class="src src-sh">sudo add-apt-repository ppa:poliva/lightum-mba
sudo apt-get update
sudo apt-get install lightum-indicator
</pre>
</div>
</div>
</li>

<li>ubuntu-tweak<br /><div class="outline-text-3" id="text-6-3">
<div class="org-src-container">

<pre class="src src-sh">sudo add-apt-repository ppa:tualatrix/ppa
sudo apt-get update
sudo apt-get install ubuntu-tweak
</pre>
</div>
</div>
</li>

<li>gnome<br /><div class="outline-text-3" id="text-6-4">
<p>
ubuntu 12.04 中安装gnome桌面的命令为：
</p>
<div class="org-src-container">

<pre class="src src-sh">sudo apt-get install gnome-session-fallback
&#20063;&#21487;&#20197;&#29992;&#65306;
sudo apt-get install gnome-panel
</pre>
</div>

<p>
安装好gnome桌面后注销重新登录，在用户名右边有一个图标，可以选择使用进入的桌面，我选择了gnome classic，然后就可以重返经典的gnome桌面了。
在删除unity桌面之前，要把ubuntu默认的登录界面也改为gnome，命令如下：
</p>
<div class="org-src-container">

<pre class="src src-sh">sudo /usr/lib/lightdm/lightdm-set-defaults -s gnome-classic
</pre>
</div>
<p>
这是设置登录界面为 gnome classic的，如果你喜欢gnome3，则用：
</p>
<div class="org-src-container">

<pre class="src src-sh">sudo /usr/lib/lightdm/lightdm-set-defaults -s gnome-shell
</pre>
</div>
<p>
接下来就可以卸载unity了。
</p>
<div class="org-src-container">

<pre class="src src-sh">sudo apt-get -y -&#8211;auto-remove purge unity
sudo apt-get -y -&#8211;auto-remove purge unity-commonp
sudo apt-get -y -&#8211;auto-remove purge unity-lens*
sudo apt-get -y -&#8211;auto-remove purge unity-services
sudo apt-get -y &#8211;-auto-remove purge unity-asset-pool
</pre>
</div>
</div>
</li>

<li>other<br /></li></ol>
</div>
<div id="footnotes">
<h2 class="footnotes">Footnotes: </h2>
<div id="text-footnotes">

<div class="footdef"><sup><a id="fn.1" name="fn.1" class="footnum" href="#fnr.1">1</a></sup> <p class="footpara">
<a href="https://help.ubuntu.com/community/MacBookPro">https://help.ubuntu.com/community/MacBookPro</a>
</p></div>

<div class="footdef"><sup><a id="fn.2" name="fn.2" class="footnum" href="#fnr.2">2</a></sup> <p class="footpara">
<a href="http://homepage.uibk.ac.at/~c705283/archives/2011/09/04/linux_support_for_broadcom_4331_wireless_chip_macbook_pro_81/index.html">http://homepage.uibk.ac.at/~c705283/archives/2011/09/04/linux_support_for_broadcom_4331_wireless_chip_macbook_pro_81/index.html</a>
</p></div>

<div class="footdef"><sup><a id="fn.3" name="fn.3" class="footnum" href="#fnr.3">3</a></sup> <p class="footpara">
<a href="https://github.com/poliva/lightum#lightum---macbook-automatic-light-sensor-daemon">https://github.com/poliva/lightum#lightum&#8212;macbook-automatic-light-sensor-daemon</a>
</p></div>

<div class="footdef"><sup><a id="fn.4" name="fn.4" class="footnum" href="#fnr.4">4</a></sup> <p class="footpara">
<a href="https://github.com/poliva/lightum-indicator">https://github.com/poliva/lightum-indicator</a>
</p></div>


</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Xilinx ISE on the Ubuntu]]></title>
    <link href="http://shishougang.github.com/blog/2012/09/12/install-xilinx-ise-on-the-ubuntu/"/>
    <updated>2012-09-12T20:44:00+08:00</updated>
    <id>http://shishougang.github.com/blog/2012/09/12/install-xilinx-ise-on-the-ubuntu</id>
    <content type="html"><![CDATA[<h2 id="download-xilinx-ise">Download Xilinx ISE</h2>
<p>Official site: http://www.xilinx.com/support/download/index.htm</p>

<p>Choose <code>Full Installer for Linux</code>
<!-- more --></p>

<h2 id="install">Install</h2>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Install</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nb">cd </span>the folder
</span><span class="line">untar the archives
</span><span class="line">sudo chmod +x xsetup
</span><span class="line">sudo ./xsetup
</span></code></pre></td></tr></table></div></figure></notextile></div>
<ul>
  <li>Just use the default install path: <code>/opt/Xilinx</code></li>
  <li>Uncheck <code>Install cable drivers</code>(if checked, it will pop the error info below, just click <code>OK</code>.</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Xilinx Software Steup </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">Driver installation failed. Please check the /.xinstall/install.log file <span class="k">for</span>
</span><span class="line">...
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>The details of the <code>/.xinstall/install.log</code> will be
&lt;div class=&#8217;bogus-wrapper&#8217;&gt;<notextile><figure class="code">&lt;figcaption&gt;<span>install.log</span>&lt;/figcaption&gt;&lt;div class=&#8221;highlight&#8221;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#8221;gutter&#8221;&gt;&lt;pre class=&#8221;line-numbers&#8221;&gt;<span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;<code class="bash"><span class="line">--Installing windrvr6---------------------------------------------
</span><span class="line">--Checking version.
</span><span class="line">--File /lib/modules/2.6.32-42-generic-pae/kernel/drivers/misc/windrvr6.o does not exist.
</span><span class="line">--File LINUX.2.6.32-42-generic-pae.i386/windrvr6.o does not exist.
</span><span class="line">--Setting <span class="nb">source </span>version to 1301.
</span><span class="line">--File LINUX.2.6.32-42-generic-pae.i386/windrvr6.o is newer than the destination file.
</span><span class="line"><span class="nv">USE_KBUILD</span> <span class="o">=</span> yes
</span><span class="line">creating cache ./config.cache
</span><span class="line">checking <span class="k">for </span>cpu architecture... i386
</span><span class="line">checking <span class="k">for </span>WinDriver root directory... /opt/Xilinx/14.2/ISE_DS/common/bin/lin/install_script/install_drivers/linux_drivers/windriver32
</span><span class="line">checking <span class="k">for </span>linux kernel source... found at /lib/modules/2.6.32-42-generic-pae/build
</span><span class="line">not found
</span><span class="line">loading cache ./config.cache
</span><span class="line">checking <span class="k">for </span>cpu architecture... i386
</span><span class="line">checking <span class="k">for </span>WinDriver root directory... /opt/Xilinx/14.2/ISE_DS/common/bin/lin/install_script/install_drivers/linux_drivers/windriver32
</span><span class="line">checking <span class="k">for </span>linux kernel source... found at /lib/modules/2.6.32-42-generic-pae/build
</span><span class="line">not found
</span><span class="line">make -f makefile.usb.kbuild clean
</span><span class="line">make<span class="o">[</span>1<span class="o">]</span>: Entering directory <span class="sb">`</span>/opt/Xilinx/14.2/ISE_DS/common/bin/lin/install_script/install_drivers/linux_drivers/windriver32/windrvr<span class="s1">&#39;</span>
</span><span class="line"><span class="s1">make[1]: Leaving directory `/opt/Xilinx/14.2/ISE_DS/common/bin/lin/install_script/install_drivers/linux_drivers/windriver32/windrvr&#39;</span>
</span><span class="line">make -f makefile.usb.kbuild
</span><span class="line">make<span class="o">[</span>1<span class="o">]</span>: Entering directory <span class="sb">`</span>/opt/Xilinx/14.2/ISE_DS/common/bin/lin/install_script/install_drivers/linux_drivers/windriver32/windrvr<span class="s1">&#39;</span>
</span><span class="line"><span class="s1">make[1]: Leaving directory `/opt/Xilinx/14.2/ISE_DS/common/bin/lin/install_script/install_drivers/linux_drivers/windriver32/windrvr&#39;</span>
</span><span class="line">make -f makefile.usb.kbuild
</span><span class="line">make<span class="o">[</span>1<span class="o">]</span>: Entering directory <span class="sb">`</span>/opt/Xilinx/14.2/ISE_DS/common/bin/lin/install_script/install_drivers/linux_drivers/windriver32/windrvr<span class="s1">&#39;</span>
</span><span class="line"><span class="s1">make[1]: Leaving directory `/opt/Xilinx/14.2/ISE_DS/common/bin/lin/install_script/install_drivers/linux_drivers/windriver32/windrvr&#39;</span>
</span><span class="line">--make windrvr install <span class="nv">rc</span><span class="o">=</span> 2
</span><span class="line">--install_windrvr6 <span class="nv">rc</span> <span class="o">=</span> 2
</span><span class="line">--Module windrvr6 is not running.
</span><span class="line">--Module xpc4drvr is not running.
</span><span class="line">--Note: By default, the file permission of /dev/windrvr6 is enabled <span class="k">for </span>the root user only
</span><span class="line">  and must be changed to allow access to other users.
</span><span class="line">
</span><span class="line">--real <span class="nv">rc</span><span class="o">=</span>2
</span><span class="line">
</span><span class="line">--Driver installation failed.
</span><span class="line">
</span><span class="line">--Digilent Return <span class="nv">code</span> <span class="o">=</span> 0
</span><span class="line">--Xilinx Return <span class="nv">code</span> <span class="o">=</span> 1
</span><span class="line">--Return <span class="nv">code</span> <span class="o">=</span> 1
</span></code>&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</figure></notextile>&lt;/div&gt;
* The Xilinx License Configuration Manager appears and configure
* Finish</p>

<h2 id="installing-cable-drivers">Installing Cable Drivers</h2>
<ul>
  <li>install the prerequisite</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>install </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">On 32-bit
</span><span class="line">sudo apt-get install gitk git-gui libusb-dev build-essential libc6-dev fxload
</span><span class="line">On 64-bit
</span><span class="line">sudo apt-get install gitk git-gui libusb-dev build-essential libc6-dev-i386 fxload
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Download the driver source and install
&lt;div class=&#8217;bogus-wrapper&#8217;&gt;<notextile><figure class="code">&lt;figcaption&gt;<span>download and install</span>&lt;/figcaption&gt;&lt;div class=&#8221;highlight&#8221;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#8221;gutter&#8221;&gt;&lt;pre class=&#8221;line-numbers&#8221;&gt;<span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span></figure></notextile></li>
</ul>
<p>&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;<code class="bash"><span class="line"><span class="nb">cd</span> /opt/Xilinx
</span><span class="line">sudo git clone git://git.zerfleddert.de/usb-driver
</span><span class="line">
</span><span class="line"><span class="nb">cd </span>usb-driver/
</span><span class="line">On 32-bit
</span><span class="line">sudo make
</span><span class="line">On 64-bit
</span><span class="line">sudo make lib32
</span></code>&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;</p>

<h2 id="setup-up-the-driver">Setup up the driver</h2>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>setup up</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>./setup_pcusb /opt/Xilinx/13.2/ISE_DS/ISE/
</span><span class="line">Looking <span class="k">for </span>USB cable files: /opt/Xilinx/14.2/ISE_DS/ISE/bin/lin
</span><span class="line">Copying firmware to /usr/share:
</span><span class="line"><span class="sb">`</span>/opt/Xilinx/14.2/ISE_DS/ISE/bin/lin/xusbdfwu.hex<span class="s1">&#39; -&gt; `/usr/share/xusbdfwu.hex&#39;</span>
</span><span class="line"><span class="sb">`</span>/opt/Xilinx/14.2/ISE_DS/ISE/bin/lin/xusb_emb.hex<span class="s1">&#39; -&gt; `/usr/share/xusb_emb.hex&#39;</span>
</span><span class="line"><span class="sb">`</span>/opt/Xilinx/14.2/ISE_DS/ISE/bin/lin/xusb_xlp.hex<span class="s1">&#39; -&gt; `/usr/share/xusb_xlp.hex&#39;</span>
</span><span class="line"><span class="sb">`</span>/opt/Xilinx/14.2/ISE_DS/ISE/bin/lin/xusb_xp2.hex<span class="s1">&#39; -&gt; `/usr/share/xusb_xp2.hex&#39;</span>
</span><span class="line"><span class="sb">`</span>/opt/Xilinx/14.2/ISE_DS/ISE/bin/lin/xusb_xpr.hex<span class="s1">&#39; -&gt; `/usr/share/xusb_xpr.hex&#39;</span>
</span><span class="line"><span class="sb">`</span>/opt/Xilinx/14.2/ISE_DS/ISE/bin/lin/xusb_xse.hex<span class="s1">&#39; -&gt; `/usr/share/xusb_xse.hex&#39;</span>
</span><span class="line"><span class="sb">`</span>/opt/Xilinx/14.2/ISE_DS/ISE/bin/lin/xusb_xup.hex<span class="s1">&#39; -&gt; `/usr/share/xusb_xup.hex&#39;</span>
</span><span class="line">Installing udev rules:
</span><span class="line"><span class="k">done</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="setting-the-ise">Setting the ISE</h2>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Setting </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nb">cd</span> /opt/Xilinx/14.2/ISE_DS
</span><span class="line">bash ./settings32.sh
</span><span class="line">. /opt/Xilinx/14.2/ISE_DS/common/.settings32.sh /opt/Xilinx/14.2/ISE_DS/common
</span><span class="line">. /opt/Xilinx/14.2/ISE_DS/EDK/.settings32.sh /opt/Xilinx/14.2/ISE_DS/EDK
</span><span class="line">. /opt/Xilinx/14.2/ISE_DS/common/CodeSourcery/.settings32.sh /opt/Xilinx/14.2/ISE_DS/common/CodeSourcery
</span><span class="line">. /opt/Xilinx/14.2/ISE_DS/PlanAhead/.settings32.sh /opt/Xilinx/14.2/ISE_DS/PlanAhead
</span><span class="line">. /opt/Xilinx/14.2/ISE_DS/../../Vivado/2012.2/.settings32.sh /opt/Xilinx/14.2/ISE_DS/../../Vivado/2012.2
</span><span class="line">. /opt/Xilinx/14.2/ISE_DS/ISE/.settings32.sh /opt/Xilinx/14.2/ISE_DS/ISE
</span><span class="line">. /opt/Xilinx/14.2/ISE_DS/../../Vivado_HLS/2012.2/.settings32.sh /opt/Xilinx/14.2/ISE_DS/../../Vivado_HLS/2012.2
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>## Restart udev
&lt;div class=&#8217;bogus-wrapper&#8217;&gt;<notextile><figure class="code">&lt;figcaption&gt;<span>Restart udev</span>&lt;/figcaption&gt;&lt;div class=&#8221;highlight&#8221;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#8221;gutter&#8221;&gt;&lt;pre class=&#8221;line-numbers&#8221;&gt;<span class="line-number">1</span>
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;<code class="bash"><span class="line">/etc/init.d/boot.udev restart
</span></code>&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</figure></notextile>&lt;/div&gt;</p>

<h2 id="fixing-the-path">Fixing the Path</h2>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Fixing the Path</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">32-bit
</span><span class="line"><span class="nb">echo</span> <span class="s2">&quot;PATH=\$PATH:/opt/Xilinx/14.2/ISE_DS/ISE/bin/lin&quot;</span> &gt;&gt; ~/.bashrc <span class="nb">echo</span> <span class="s2">&quot;export PATH&quot;</span> &gt;&gt; ~/.bashrc
</span><span class="line">64-bit
</span><span class="line"><span class="nb">echo</span> <span class="s2">&quot;PATH=\$PATH:/opt/Xilinx/14.2/ISE_DS/ISE/bin/lin64/&quot;</span> &gt;&gt; ~/.bashrc <span class="nb">echo</span> <span class="s2">&quot;export PATH&quot;</span> &gt;&gt; ~/.bashrc
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>## Run the IMPACK to check everything</p>

<p class="warning"> Errors </p>
<p>If it appears:
&lt;div class=&#8217;bogus-wrapper&#8217;&gt;<notextile><figure class="code">&lt;figcaption&gt;<span>Errors</span>&lt;/figcaption&gt;&lt;div class=&#8221;highlight&#8221;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#8221;gutter&#8221;&gt;&lt;pre class=&#8221;line-numbers&#8221;&gt;<span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#8217;code&#8217;&gt;&lt;pre&gt;<code class="bash"><span class="line">INFO:iMPACT - Selected Current Working Directory:
</span><span class="line">   <span class="s1">&#39;/opt/Xilinx/14.2/ISE_DS/ISE/bin/lin&#39;</span>
</span><span class="line">libusb couldn<span class="err">&#39;</span>t open USB device /dev/bus/usb/002/035: Permission denied.
</span><span class="line">libusb requires write access to USB device nodes.
</span></code>&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</figure></notextile>&lt;/div&gt;
* First check there is <code>/etc/udev/rules.d/xusbdfwu.rules</code>
* Restart udev <code>/etc/init.d/boot.udev restart</code>
* Still wrong, reboot and try again.</p>

<h2 id="reference">Reference</h2>
<pre><code>http://www.george-smart.co.uk/wiki/Xilinx_JTAG_Linux

http://git.zerfleddert.de/cgi-bin/gitweb.cgi/usb-driver?a=blob_plain;f=README;hb=HEAD
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[License Server Administration for CCS]]></title>
    <link href="http://shishougang.github.com/blog/2012/08/13/license-server-administration-for-ccs/"/>
    <updated>2012-08-13T21:27:00+08:00</updated>
    <id>http://shishougang.github.com/blog/2012/08/13/license-server-administration-for-ccs</id>
    <content type="html"><![CDATA[<p>
Official site: <a href="http://processors.wiki.ti.com/index.php/License_Server_Administration_for_CCS#Configuring_Code_Composer_Studio">http://processors.wiki.ti.com/index.php/License_Server_Administration_for_CCS#Configuring_Code_Composer_Studio</a>
</p>
<div id="outline-container-1" class="outline-2">
<h2 id="sec-1">1. Requirements</h2>
<div class="outline-text-2" id="text-1">

<ul>
<li><code>lmadmin</code> if graphical installation is desired
</li>
<li><code>lmgrd</code> and lmtools for command-line installation. Windows also has an additional utility called lmutils.
</li>
<li>Texas Instruments’ vendor daemon tidspssw
</li>
</ul>




<!-- more -->

</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2">2. License server setup</h2>
<div class="outline-text-2" id="text-2">


</div>

<div id="outline-container-2-1" class="outline-3">
<h3 id="sec-2-1">2.1 Download the graphical utility <code>&lt;lmadmin-i86_n3-11_9_0_0.exe&gt;</code> and save it to any directory in your system:</h3>
<div class="outline-text-3" id="text-2-1">

<p><a href="http://www.globes.com/support/fnp_utilities_download.htm">http://www.globes.com/support/fnp_utilities_download.htm</a>
</p></div>

</div>

<div id="outline-container-2-2" class="outline-3">
<h3 id="sec-2-2">2.2 Download the license server utilities &lt;lmutil&gt;, &lt;lmgrd&gt; and &lt;lmtools&gt; for your PC type</h3>
<div class="outline-text-3" id="text-2-2">

<p><a href="http://www.globes.com/support/fnp_utilities_download.htm">http://www.globes.com/support/fnp_utilities_download.htm</a>
</p></div>

</div>

<div id="outline-container-2-3" class="outline-3">
<h3 id="sec-2-3">2.3 Download the TI daemon server &lt;tidspssw.zip&gt;</h3>
<div class="outline-text-3" id="text-2-3">

<p><a href="http://software-dl.ti.com/dsps/dsps_registered_sw/sdo_ccstudio/CCSv4/tidspssw/win32/tidspssw.zip">http://software-dl.ti.com/dsps/dsps_registered_sw/sdo_ccstudio/CCSv4/tidspssw/win32/tidspssw.zip</a>
</p></div>

</div>

<div id="outline-container-2-4" class="outline-3">
<h3 id="sec-2-4">2.4 Run the  <code>&lt;lmadmin-i86_n3-11_9_0_0.exe&gt;</code> installer and follow the on-screen instructions:</h3>
<div class="outline-text-3" id="text-2-4">

<ul>
<li>In the step Important information select <b>Install Visual C++ SP1 Redistributable Package</b> if you do not have it installed in your system.
</li>
<li>In the step Service Configuration check the box Run as a service to guarantee the license server will be active even if nobody is logged to the host PC.
</li>
<li>In the step Start the Server check the box Start server now. A
  browser window will open with the main license manager GUI. 
</li>
<li>Get the HTTP server port is 8090. (browser it <code>localhost:8090</code> or
  <code>127.0.0.1:8090</code>).
</li>
</ul>

</div>

</div>

<div id="outline-container-2-5" class="outline-3">
<h3 id="sec-2-5">2.5 Open a Windows Explorer window and unzip the utilities downloaded in step 2 above to the directory where &lt;lmadmin.exe&gt; is installed. The default installation directory is</h3>
<div class="outline-text-3" id="text-2-5">


<p>
 <code>C:\Program Files\FLEXnet Publisher License Server Manager</code>
</p></div>

</div>

<div id="outline-container-2-6" class="outline-3">
<h3 id="sec-2-6">2.6 At last, unzip the TI daemon server to the installation directory</h3>
<div class="outline-text-3" id="text-2-6">


<p class="info"> Note: on a Microsoft Windows system, the files
<tidspssw.exe> and &lt;.manifest&gt; should be placed in the same directory
as <lmadmin.exe>.




<div id="outline-container-2-7" class="outline-3">
<h3 id="sec-2-7">2.7 Go back to the browser window opened in step 4 and click on Administration at the top right corner.</h3>
<div class="outline-text-3" id="text-2-7">

<p>The default username/password is admin/admin and the first run a
window will open to perform a mandatory change to the password.
</p></div>

</div>

<div id="outline-container-2-8" class="outline-3">
<h3 id="sec-2-8">2.8 In the main administration view click on Vendor Daemon Configuration and click on the Import License icon.</h3>
<div class="outline-text-3" id="text-2-8">

<p> Browse to where the .lic file is located and click on Import license.
 A message will be displayed saying the license was successfully
 imported. Click OK.
</p></div>

</div>

<div id="outline-container-2-9" class="outline-3">
<h3 id="sec-2-9">2.9 The Vendor Daemon Configuration screen should now show a tidspssw daemon.</h3>
<div class="outline-text-3" id="text-2-9">

<p> Click on Sign Out and close the browser window.
</p></div>

</div>

<div id="outline-container-2-10" class="outline-3">
<h3 id="sec-2-10">2.10 The license server is now configured and running.</h3>
<div class="outline-text-3" id="text-2-10">

<p>To go back to the license administrator GUI in the future, open a web
browser and type the URL  <code>localhost:8090</code> or <code>127.0.0.1:8090</code>.
</p>
</div>
</div>



<div id="outline-container-3" class="outline-2">
<h2 id="sec-3">3. Configuring Code Composer Studio</h2>
<div class="outline-text-2" id="text-3">


</div>

<div id="outline-container-3-1" class="outline-3">
<h3 id="sec-3-1">3.1 Using the graphical license manager (recommended)</h3>
<div class="outline-text-3" id="text-3-1">


</div>

<div id="outline-container-3-1-1" class="outline-4">
<h4 id="sec-3-1-1">3.1.1 Run the CCS</h4>
<div class="outline-text-4" id="text-3-1-1">

</div>

</div>

<div id="outline-container-3-1-2" class="outline-4">
<h4 id="sec-3-1-2">3.1.2 Help-&gt;Code Composer Studio Licensing Information</h4>
<div class="outline-text-4" id="text-3-1-2">

<ul>
<li>Status: check the Licensed Status and License Type
</li>
<li>Upgrade: Launch License Setup and input License
  Server:=localhost:8090= or <code>127.0.0.1:8090</code>.
</li>
</ul>









</div>
</div>
</div>
</div>
</lmadmin.exe></tidspssw.exe></p></div></div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First Post]]></title>
    <link href="http://shishougang.github.com/blog/2012/08/08/first-post/"/>
    <updated>2012-08-08T18:27:00+08:00</updated>
    <id>http://shishougang.github.com/blog/2012/08/08/first-post</id>
    <content type="html"><![CDATA[<blockquote><p>Every Generation Has A Legend. Every Journey Has A First Step. Every Saga Has A Beginning.</p><footer><strong>The Phantom Menace Trailer</strong> <cite>Star Wars Episode I</cite></footer></blockquote>

<p>Keep learning, thinking and summarizing.  </p>

<blockquote><p>All I want to do is just sit here<br />And write it all down and rest for a while</p><footer><strong>Sinead O’Connor</strong> <cite><a href="http://www.tudou.com/programs/view/2xSUmtSyvp0/">The Emperor’s New Clothes</a></cite></footer></blockquote>
]]></content>
  </entry>
  
</feed>
